/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "lsGameAnalytics.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef       void(*lsGameAnalyticsInitialise_t)(const char * secretKey, const char * gameKey, const char * build);
typedef       bool(*lsGameAnalyticsIsInitialised_t)();
typedef       bool(*lsGameAnalyticsIsSessionStarted_t)();
typedef       void(*lsGameAnalyticsStartSession_t)();
typedef       void(*lsGameAnalyticsStopSession_t)();
typedef       void(*lsGameAnalyticsNewDesignEvent_t)(const char * eventId, float value, const char * area, float x, float y, float z);
typedef       void(*lsGameAnalyticsNewQualityEvent_t)(const char * eventId, const char * message, const char * area, float x, float y, float z);
typedef       void(*lsGameAnalyticsNewErrorEvent_t)(const char * message, const char * severity, const char * area, float x, float y, float z);
typedef       void(*lsGameAnalyticsNewUserEvent_t)(const char * eventId, const char * gender, int birthYear, int friendCount, const char * area, float x, float y, float z);
typedef       void(*lsGameAnalyticsSetUserInfo_t)(const char * gender, int birthYear, int friendCount);
typedef       void(*lsGameAnalysticsSetReferralInfo_t)(const char * installPublisher, const char * installSite, const char * installCampaign, const char * installAdgroup, const char * installAd, const char * installKeyword);
typedef       void(*lsGameAnalysticsNewBusinessEvent_t)(const char * eventId, const char * currency, int amount, const char * area, float x, float y, float z);
typedef       void(*lsGameAnalysticsSetSendEventsInterval_t)(int millis);
typedef       void(*lsGameAnalysticsSetNetworkPollInterval_t)(int millis);
typedef       void(*lsGameAnalysticsSetSessionTimeOut_t)(int millis);
typedef       void(*lsGameAnalysticsLogFPS_t)();
typedef       void(*lsGameAnalysticsStopLoggingFPS_t)(const char * area, float x, float y, float z);
typedef       void(*lsGameAnalysticsSetCriticalFPSLimit_t)(int criticalFPS);
typedef       void(*lsGameAnalysticsSetMinimumFPSTimePeriod_t)(int minimumTimePeriod);
typedef       void(*lsGameAnalysticsLogUnhandledExceptions_t)();
typedef       void(*lsGameAnalysticsSetUserId_t)(const char * userId);
typedef       void(*lsGameAnalysticsSetDebugLogLevel_t)(int level);
typedef       void(*lsGameAnalysticsSetLocalCaching_t)(bool value);
typedef       void(*lsGameAnalysticsSetAutoBatch_t)(bool value);
typedef       void(*lsGameAnalysticsSetMaximumEventStorage_t)(int max);
typedef       void(*lsGameAnalysticsManualBatch_t)();
typedef       void(*lsGameAnalysticsGetUserId_t)(char * destination);
typedef       void(*lsGameAnalysticsClearDatabase_t)();

/**
 * struct that gets filled in by lsGameAnalyticsRegister
 */
typedef struct lsGameAnalyticsFuncs
{
    lsGameAnalyticsInitialise_t m_lsGameAnalyticsInitialise;
    lsGameAnalyticsIsInitialised_t m_lsGameAnalyticsIsInitialised;
    lsGameAnalyticsIsSessionStarted_t m_lsGameAnalyticsIsSessionStarted;
    lsGameAnalyticsStartSession_t m_lsGameAnalyticsStartSession;
    lsGameAnalyticsStopSession_t m_lsGameAnalyticsStopSession;
    lsGameAnalyticsNewDesignEvent_t m_lsGameAnalyticsNewDesignEvent;
    lsGameAnalyticsNewQualityEvent_t m_lsGameAnalyticsNewQualityEvent;
    lsGameAnalyticsNewErrorEvent_t m_lsGameAnalyticsNewErrorEvent;
    lsGameAnalyticsNewUserEvent_t m_lsGameAnalyticsNewUserEvent;
    lsGameAnalyticsSetUserInfo_t m_lsGameAnalyticsSetUserInfo;
    lsGameAnalysticsSetReferralInfo_t m_lsGameAnalysticsSetReferralInfo;
    lsGameAnalysticsNewBusinessEvent_t m_lsGameAnalysticsNewBusinessEvent;
    lsGameAnalysticsSetSendEventsInterval_t m_lsGameAnalysticsSetSendEventsInterval;
    lsGameAnalysticsSetNetworkPollInterval_t m_lsGameAnalysticsSetNetworkPollInterval;
    lsGameAnalysticsSetSessionTimeOut_t m_lsGameAnalysticsSetSessionTimeOut;
    lsGameAnalysticsLogFPS_t m_lsGameAnalysticsLogFPS;
    lsGameAnalysticsStopLoggingFPS_t m_lsGameAnalysticsStopLoggingFPS;
    lsGameAnalysticsSetCriticalFPSLimit_t m_lsGameAnalysticsSetCriticalFPSLimit;
    lsGameAnalysticsSetMinimumFPSTimePeriod_t m_lsGameAnalysticsSetMinimumFPSTimePeriod;
    lsGameAnalysticsLogUnhandledExceptions_t m_lsGameAnalysticsLogUnhandledExceptions;
    lsGameAnalysticsSetUserId_t m_lsGameAnalysticsSetUserId;
    lsGameAnalysticsSetDebugLogLevel_t m_lsGameAnalysticsSetDebugLogLevel;
    lsGameAnalysticsSetLocalCaching_t m_lsGameAnalysticsSetLocalCaching;
    lsGameAnalysticsSetAutoBatch_t m_lsGameAnalysticsSetAutoBatch;
    lsGameAnalysticsSetMaximumEventStorage_t m_lsGameAnalysticsSetMaximumEventStorage;
    lsGameAnalysticsManualBatch_t m_lsGameAnalysticsManualBatch;
    lsGameAnalysticsGetUserId_t m_lsGameAnalysticsGetUserId;
    lsGameAnalysticsClearDatabase_t m_lsGameAnalysticsClearDatabase;
} lsGameAnalyticsFuncs;

static lsGameAnalyticsFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xcc367666, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: lsGameAnalytics");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xcc367666, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool lsGameAnalyticsAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

void lsGameAnalyticsInitialise(const char * secretKey, const char * gameKey, const char * build)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[0] func: lsGameAnalyticsInitialise"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsInitialise(secretKey, gameKey, build);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

bool lsGameAnalyticsIsInitialised()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[1] func: lsGameAnalyticsIsInitialised"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_lsGameAnalyticsIsInitialised();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

bool lsGameAnalyticsIsSessionStarted()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[2] func: lsGameAnalyticsIsSessionStarted"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_lsGameAnalyticsIsSessionStarted();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void lsGameAnalyticsStartSession()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[3] func: lsGameAnalyticsStartSession"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsStartSession();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalyticsStopSession()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[4] func: lsGameAnalyticsStopSession"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsStopSession();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalyticsNewDesignEvent(const char * eventId, float value, const char * area, float x, float y, float z)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[5] func: lsGameAnalyticsNewDesignEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsNewDesignEvent(eventId, value, area, x, y, z);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalyticsNewQualityEvent(const char * eventId, const char * message, const char * area, float x, float y, float z)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[6] func: lsGameAnalyticsNewQualityEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsNewQualityEvent(eventId, message, area, x, y, z);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalyticsNewErrorEvent(const char * message, const char * severity, const char * area, float x, float y, float z)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[7] func: lsGameAnalyticsNewErrorEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsNewErrorEvent(message, severity, area, x, y, z);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalyticsNewUserEvent(const char * eventId, const char * gender, int birthYear, int friendCount, const char * area, float x, float y, float z)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[8] func: lsGameAnalyticsNewUserEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsNewUserEvent(eventId, gender, birthYear, friendCount, area, x, y, z);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalyticsSetUserInfo(const char * gender, int birthYear, int friendCount)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[9] func: lsGameAnalyticsSetUserInfo"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalyticsSetUserInfo(gender, birthYear, friendCount);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetReferralInfo(const char * installPublisher, const char * installSite, const char * installCampaign, const char * installAdgroup, const char * installAd, const char * installKeyword)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[10] func: lsGameAnalysticsSetReferralInfo"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetReferralInfo(installPublisher, installSite, installCampaign, installAdgroup, installAd, installKeyword);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsNewBusinessEvent(const char * eventId, const char * currency, int amount, const char * area, float x, float y, float z)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[11] func: lsGameAnalysticsNewBusinessEvent"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsNewBusinessEvent(eventId, currency, amount, area, x, y, z);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetSendEventsInterval(int millis)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[12] func: lsGameAnalysticsSetSendEventsInterval"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetSendEventsInterval(millis);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetNetworkPollInterval(int millis)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[13] func: lsGameAnalysticsSetNetworkPollInterval"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetNetworkPollInterval(millis);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetSessionTimeOut(int millis)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[14] func: lsGameAnalysticsSetSessionTimeOut"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetSessionTimeOut(millis);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsLogFPS()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[15] func: lsGameAnalysticsLogFPS"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsLogFPS();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsStopLoggingFPS(const char * area, float x, float y, float z)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[16] func: lsGameAnalysticsStopLoggingFPS"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsStopLoggingFPS(area, x, y, z);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetCriticalFPSLimit(int criticalFPS)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[17] func: lsGameAnalysticsSetCriticalFPSLimit"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetCriticalFPSLimit(criticalFPS);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetMinimumFPSTimePeriod(int minimumTimePeriod)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[18] func: lsGameAnalysticsSetMinimumFPSTimePeriod"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetMinimumFPSTimePeriod(minimumTimePeriod);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsLogUnhandledExceptions()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[19] func: lsGameAnalysticsLogUnhandledExceptions"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsLogUnhandledExceptions();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetUserId(const char * userId)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[20] func: lsGameAnalysticsSetUserId"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetUserId(userId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetDebugLogLevel(int level)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[21] func: lsGameAnalysticsSetDebugLogLevel"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetDebugLogLevel(level);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetLocalCaching(bool value)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[22] func: lsGameAnalysticsSetLocalCaching"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetLocalCaching(value);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetAutoBatch(bool value)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[23] func: lsGameAnalysticsSetAutoBatch"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetAutoBatch(value);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsSetMaximumEventStorage(int max)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[24] func: lsGameAnalysticsSetMaximumEventStorage"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsSetMaximumEventStorage(max);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsManualBatch()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[25] func: lsGameAnalysticsManualBatch"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsManualBatch();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsGetUserId(char * destination)
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[26] func: lsGameAnalysticsGetUserId"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsGetUserId(destination);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void lsGameAnalysticsClearDatabase()
{
    IwTrace(LSGAMEANALYTICS_VERBOSE, ("calling lsGameAnalytics[27] func: lsGameAnalysticsClearDatabase"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_lsGameAnalysticsClearDatabase();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}
